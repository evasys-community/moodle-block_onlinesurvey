{"version":3,"file":"modal-zoom.min.js","sources":["../src/modal-zoom.js"],"sourcesContent":["define(['jquery', 'core/templates', 'core/modal', 'core/modal_factory', 'core/modal_events'],\r\n    function($, templates, Modal, ModalFactory, ModalEvents) {\r\n\r\n    var modalTitle = '';\r\n    var modalZoomSelector = '#block_onlinesurvey_surveys_content';\r\n\r\n    var popupinfotitle = '';\r\n    var popupinfocontent = '';\r\n    var userlogintime = 0;\r\n\r\n    var handleClickSmallModal = function(e) {\r\n        e.preventDefault();\r\n\r\n        var modalZoomElem = e.target;\r\n\r\n        var originalIframe = modalZoomElem.querySelector('iframe');\r\n\r\n        var modalPromise = null;\r\n        var templatePromise = null;\r\n        modalPromise = ModalFactory.create({type: ModalFactory.types.DEFAULT, large: true, title: modalTitle});\r\n        if (originalIframe !== null) {\r\n            // Open from Moodle page, i.e., onlinesurvey iframe exists.\r\n            templatePromise = templates.render('block_onlinesurvey/modal-iframe', {\r\n                // Copy iframe target URL from block, but inform that now in modalZoom window.\r\n                src: originalIframe.src + \"&modalZoom=1\",\r\n                title: modalTitle\r\n            });\r\n        } else {\r\n            // Open from iframe, i.e., needs to switch to parent Moodle page.\r\n            originalIframe = parent.document.querySelector('iframe');\r\n            templatePromise = templates.render('block_onlinesurvey/modal-iframe', {\r\n                // Copy iframe target URL from block, but inform that now in modalZoom window.\r\n                src: originalIframe.src + \"&modalZoom=1\",\r\n                title: modalTitle\r\n            });\r\n        }\r\n\r\n        $.when(templatePromise, modalPromise).done(function(source, iframemodal) {\r\n            iframemodal.setBody(source);\r\n            iframemodal.getModal().addClass('modal-xl');\r\n\r\n            iframemodal.show();\r\n        });\r\n    };\r\n\r\n    return {\r\n        init: function(popuptitle, popupcontent, currentlogin) {\r\n\r\n            popupinfotitle = popuptitle;\r\n            popupinfocontent = popupcontent;\r\n            userlogintime = currentlogin;\r\n\r\n            var zoomContainer = document.querySelectorAll(modalZoomSelector);\r\n\r\n            for (var i = 0; i < zoomContainer.length; i++) {\r\n                zoomContainer[i].addEventListener('click', handleClickSmallModal);\r\n            }\r\n\r\n            // Namespace in window for EVASYS-functions etc.\r\n            window.EVASYS = {\r\n                // Define \"global\" functions in namespace -> later \"external\" access from iframe possible.\r\n                generatepopupinfo: this.generatepopupinfo\r\n            };\r\n            window.evasysGeneratePopupinfo = this.generatepopupinfo;\r\n        },\r\n        generatepopupinfo: function() {\r\n\r\n            // Get saved data from sessionStorage.\r\n            var popupinfo = sessionStorage.getItem('onlinesurvey_popupinfo');\r\n\r\n            if (popupinfo == false || popupinfo === null || popupinfo != userlogintime) {\r\n\r\n                // Save data to sessionStorage.\r\n                sessionStorage.setItem('onlinesurvey_popupinfo', userlogintime);\r\n\r\n                var modalPromise = ModalFactory.create(\r\n                    {\r\n                        type:ModalFactory.types.DEFAULT,\r\n                        body: popupinfocontent,\r\n                        title: popupinfotitle,\r\n                        large: true\r\n                    }\r\n                );\r\n                $.when(modalPromise).then(function(popupmodal) {\r\n                    popupmodal.getModal().addClass('modal-xl');\r\n                    popupmodal.show();\r\n                });\r\n            }\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","templates","Modal","ModalFactory","ModalEvents","popupinfotitle","popupinfocontent","userlogintime","handleClickSmallModal","e","preventDefault","modalPromise","originalIframe","target","querySelector","templatePromise","create","type","types","DEFAULT","large","title","parent","document","render","src","when","done","source","iframemodal","setBody","getModal","addClass","show","init","popuptitle","popupcontent","currentlogin","zoomContainer","querySelectorAll","i","length","addEventListener","window","EVASYS","generatepopupinfo","this","evasysGeneratePopupinfo","popupinfo","sessionStorage","getItem","setItem","body","then","popupmodal"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,iBAAkB,aAAc,qBAAsB,sBACpE,SAASC,EAAGC,UAAWC,MAAOC,aAAcC,iBAKxCC,eAAiB,GACjBC,iBAAmB,GACnBC,cAAgB,EAEhBC,sBAAwB,SAASC,GACjCA,EAAEC,qBAMEC,aAFAC,eAFgBH,EAAEI,OAEaC,cAAc,UAG7CC,gBAAkB,KACtBJ,aAAeR,aAAaa,OAAO,CAACC,KAAMd,aAAae,MAAMC,QAASC,OAAO,EAAMC,MAhBtE,KAiBU,OAAnBT,iBASAA,eAAiBU,OAAOC,SAAST,cAAc,WAP/CC,gBAAkBd,UAAUuB,OAAO,kCAAmC,CAElEC,IAAKb,eAAea,IAAM,eAC1BJ,MAtBK,KAkCbrB,EAAE0B,KAAKX,gBAAiBJ,cAAcgB,MAAK,SAASC,OAAQC,aACxDA,YAAYC,QAAQF,QACpBC,YAAYE,WAAWC,SAAS,YAEhCH,YAAYI,iBAIb,CACHC,KAAM,SAASC,WAAYC,aAAcC,cAErChC,eAAiB8B,WACjB7B,iBAAmB8B,aACnB7B,cAAgB8B,qBAEZC,cAAgBf,SAASgB,iBAhDb,uCAkDPC,EAAI,EAAGA,EAAIF,cAAcG,OAAQD,IACtCF,cAAcE,GAAGE,iBAAiB,QAASlC,uBAI/CmC,OAAOC,OAAS,CAEZC,kBAAmBC,KAAKD,mBAE5BF,OAAOI,wBAA0BD,KAAKD,mBAE1CA,kBAAmB,eAGXG,UAAYC,eAAeC,QAAQ,6BAEtB,GAAbF,WAAoC,OAAdA,WAAsBA,WAAazC,cAAe,CAGxE0C,eAAeE,QAAQ,yBAA0B5C,mBAE7CI,aAAeR,aAAaa,OAC5B,CACIC,KAAKd,aAAae,MAAMC,QACxBiC,KAAM9C,iBACNe,MAAOhB,eACPe,OAAO,IAGfpB,EAAE0B,KAAKf,cAAc0C,MAAK,SAASC,YAC/BA,WAAWvB,WAAWC,SAAS,YAC/BsB,WAAWrB"}